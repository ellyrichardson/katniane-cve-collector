package com.katniane.cvecollector.dataaccesslayer;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.stereotype.Component;

import com.katniane.cvecollector.controller.CveCollectorController;
import com.katniane.cvecollector.domain.Cpe;
import com.katniane.cvecollector.domain.Cve;

import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

@NoArgsConstructor
@AllArgsConstructor
@Component
public class CveDetailDaoImpl implements CveDetailDao {
	
	private static final Logger LOG = LoggerFactory.getLogger(CveDetailDaoImpl.class);
	
	@Autowired
	private MongoTemplate mongoTemplate;

	@Override
	public List<Cve> getCvesOfCpe(String cpeName) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Cpe retrieveCpeInDB(String cpeName) {
		//LOG.info("Checking DB entry for the CPE: {}", cpeName);
		LOG.info("Attempting to retrieve CVE details from Katniane DB for CPE: {}", cpeName);
		return mongoTemplate.findById(cpeName, Cpe.class);
		/*
		if (cpe != null ) {
			LOG.info("DB entry FOUND for the CPE: {}", cpeName);
			return true;
		} else {
			LOG.info("DB entry NOT FOUND for the CPE: {}", cpeName);
			return false;
		}*/
	}

	@Override
	public void saveCpeWithCve(Cpe cpe) {
		LOG.info("Saving CPE entry to Katniane CVE Collections DB: {}", cpe.getId());
		mongoTemplate.save(cpe);
	}

}
